### 应用动态语言
#### 在应用中使用多语言系统，基本和thinkphp内置语言系统相同，只是调用动态语言词汇使用lang全局函数替代了L内置函数。

#### 一、定义默认语言文件
语言文件的路径是：`{APP_NAME}/Lang/zh-cn/common.php` （{APP_NAME}是你的应用目录）。

语言文件 返回一维的关联数组，`键名`由`字母及下划线、数字`组成的描述性英文(或拼音)，应当尽量表述清楚，`键值`则是显示给用户看的中文术语。

#### 二、使用动态语言（后端）
这里使用全局函数lang代替thinkphp的L函数，`lang($name, [$appkey, [defautvalue]])`

* [$name] 词汇描述(即语言文件数组的键名)，不为空则返回对应的中文术语；如果为空，则返回当前查找应用的全部词汇列表。 
* [$appkey] 如果不填写，则使用当前访问路径的app参数
* [$defaultvalue] 默认为'',如果最终找不到词汇，则返回它

#### 三、使用动态语言（前端）
前端语言的函数名、参数与后端一模一样，这里主要分为模块化调用及非模块化调用。
* 模块化调用，载入模块‘`lang/lang`’(假定当前加载器目录为Public1/js/avalon)，回调函数对应的参数名称则是动态语言的函数名。
* 非模块化调用，这里需要转入两个文件`/Public1/js/avalon/globalinfo/langData.js`(由后端动态生成)， `/Public1/js/avalon/lang/jang.js`
调用的函数名为ls.lang()。

#### 四、使用注意
* 因为前后端的差异，这里`推荐使用后端`去做。语言文件使用`utf-8无dom格式`保存，如果有bom可能影响全局缓存更新。
* 为了提升文件载入的效率，`每次更改语言文件都要更新缓存`。